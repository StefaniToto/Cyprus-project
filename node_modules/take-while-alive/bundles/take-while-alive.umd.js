(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs/operators')) :
    typeof define === 'function' && define.amd ? define('take-while-alive', ['exports', 'rxjs/operators'], factory) :
    (factory((global['take-while-alive'] = {}),global.rxjs.operators));
}(this, (function (exports,operators) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var /** @type {?} */ isAlivePropName = '__isComponentAlive';
    /**
     * @template T
     * @param {?} component
     * @return {?}
     */
    function takeWhileAlive(component) {
        return operators.takeWhile(function () { return component[isAlivePropName]; });
    }
    /**
     * @return {?}
     */
    function AutoUnsubscribe() {
        return function (target) {
            var /** @type {?} */ proto = target.prototype;
            var /** @type {?} */ originalNgOnDestroy = proto.ngOnDestroy;
            proto[isAlivePropName] = true;
            target.prototype.ngOnDestroy = function () {
                if (originalNgOnDestroy) {
                    originalNgOnDestroy.apply(this);
                }
                this[isAlivePropName] = false;
            };
        };
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    exports.takeWhileAlive = takeWhileAlive;
    exports.AutoUnsubscribe = AutoUnsubscribe;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFrZS13aGlsZS1hbGl2ZS51bWQuanMubWFwIiwic291cmNlcyI6WyJuZzovL3Rha2Utd2hpbGUtYWxpdmUvbGliL3Rha2Utd2hpbGUtYWxpdmUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTW9ub1R5cGVPcGVyYXRvckZ1bmN0aW9uIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyB0YWtlV2hpbGUgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmNvbnN0IGlzQWxpdmVQcm9wTmFtZSA9ICdfX2lzQ29tcG9uZW50QWxpdmUnO1xuXG5leHBvcnQgZnVuY3Rpb24gdGFrZVdoaWxlQWxpdmU8VD4oY29tcG9uZW50OiBhbnkpOiBNb25vVHlwZU9wZXJhdG9yRnVuY3Rpb248VD4ge1xuICAgIHJldHVybiB0YWtlV2hpbGU8VD4oKCkgPT4gY29tcG9uZW50W2lzQWxpdmVQcm9wTmFtZV0pO1xufVxuXG5cbmV4cG9ydCBmdW5jdGlvbiBBdXRvVW5zdWJzY3JpYmUoKTogQ2xhc3NEZWNvcmF0b3Ige1xuICAgIHJldHVybiB0YXJnZXQgPT4ge1xuICAgICAgICBjb25zdCBwcm90byA9IHRhcmdldC5wcm90b3R5cGU7XG4gICAgICAgIGNvbnN0IG9yaWdpbmFsTmdPbkRlc3Ryb3k6IEZ1bmN0aW9uID0gcHJvdG8ubmdPbkRlc3Ryb3k7XG5cbiAgICAgICAgcHJvdG9baXNBbGl2ZVByb3BOYW1lXSA9IHRydWU7XG4gICAgICAgIHRhcmdldC5wcm90b3R5cGUubmdPbkRlc3Ryb3kgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAob3JpZ2luYWxOZ09uRGVzdHJveSkge1xuICAgICAgICAgICAgICAgIG9yaWdpbmFsTmdPbkRlc3Ryb3kuYXBwbHkodGhpcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzW2lzQWxpdmVQcm9wTmFtZV0gPSBmYWxzZTtcbiAgICAgICAgfTtcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbInRha2VXaGlsZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUNBLElBRUEscUJBQU0sZUFBZSxHQUFHLG9CQUFvQixDQUFDOzs7Ozs7QUFFN0MsNEJBQWtDLFNBQWM7UUFDNUMsT0FBT0EsbUJBQVMsQ0FBSSxjQUFNLE9BQUEsU0FBUyxDQUFDLGVBQWUsQ0FBQyxHQUFBLENBQUMsQ0FBQztLQUN6RDs7OztBQUdEO1FBQ0ksT0FBTyxVQUFBLE1BQU07WUFDVCxxQkFBTSxLQUFLLEdBQUcsTUFBTSxDQUFDLFNBQVMsQ0FBQztZQUMvQixxQkFBTSxtQkFBbUIsR0FBYSxLQUFLLENBQUMsV0FBVyxDQUFDO1lBRXhELEtBQUssQ0FBQyxlQUFlLENBQUMsR0FBRyxJQUFJLENBQUM7WUFDOUIsTUFBTSxDQUFDLFNBQVMsQ0FBQyxXQUFXLEdBQUc7Z0JBQzNCLElBQUksbUJBQW1CLEVBQUU7b0JBQ3JCLG1CQUFtQixDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztpQkFDbkM7Z0JBQ0QsSUFBSSxDQUFDLGVBQWUsQ0FBQyxHQUFHLEtBQUssQ0FBQzthQUNqQyxDQUFDO1NBQ0wsQ0FBQztLQUNMOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==